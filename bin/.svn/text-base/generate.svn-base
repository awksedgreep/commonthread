#!/usr/bin/env ruby

require 'erb'

$generator= ARGV.shift
$classname = ARGV.shift.capitalize
$args = ARGV

def generate(basedir, generator = nil)
   generator = $generator if generator.nil?
   output_file = basedir.to_s << "/" << $classname.downcase.to_s << ".rb"
   generator_file = File.dirname(File.expand_path(__FILE__)) << "/../generators/" << generator.to_s.downcase << ".rhtml"
   if FileTest.exists?(generator_file)
      puts "Output File: #{output_file}\nGenerator File: #{generator_file}\nGenerator: #{generator}"
      output = File.open(output_file, "w")
      contents = File.open(generator_file).read
      tpl = ERB.new(contents)
      output.puts tpl.result
   end
end

case $generator
  when "controller" then generate("app/controllers")
  when "producer" then generate("app/producers")
  when "consumer" then generate("app/consumers")
  when "logger" then generate("app/loggers")
  when "model" then generate("app/models")
  when "startup" then generate("app/startup")
  when "scaffold" then
     generate("app/controllers", "controller")
     generate("app/producers", "producer")
     generate("app/consumers", "consumer")
     generate("app/loggers", "logger")
     generate("app/models", "model")
     generate("app/startup", "startup")
  else
    puts "Did not understand your request."
    usage
    exit(1)
end

def usage
   puts "generate (controller|producer|consumer|logger|model|startup|scaffold) classname"
end
