#!/usr/bin/env ruby

pwd = File.dirname(__FILE__)
require "#{pwd}/../environment"
require 'webrick'
require 'xmlrpc/server'

Dir["#{pwd}/../app/startup/*.rb"].each do |file|
  load "#{file}"
end

server = XMLRPC::WEBrickServlet.new
server.set_default_handler do |name, *args|
   call = name.match(/([^\.]+)\.(.*$)/)
   eval("valid = #{call[1].trim}.xmlrpc_methods.include?('#{call[2]}')") # Valid/Approved Method?
   if valid
      eval("#{name}(*args)") # Looks more unsafe than it really is
   else
      raise XMLRPC::FaultException(-99, "Method Missing")
   end
end

httpserver = WEBrick::HTTPServer.new(:Port => 8086)
httpserver.mount('XMLRPC', server)
trap("INT") { httpserver.shutdown }
httpserver.start
